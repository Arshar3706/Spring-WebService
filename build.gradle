// 실행 확인해볼 것
// buildscript 작동을 위해 필요한 것
buildscript {
    // 프로젝트 전체에서 접근 가능한 변수로 설정
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath ("io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE")
    }
}

/*
찾아보니까 상기한 'apply plugin', 후술한 'plugins' 블록 둘 다 권장하는 방식임
plugins {
    id 'org.springframework.boot' version '2.4.0'
    //  특히 얘는 없던 코드라 확인해보기 → spring boot 버전에 따라 라이브러리 의존성 관리, 라이브러리 간 충돌을 방지해줌
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}
 */

/*
// 블로그에 맞춰 apply plugins 로 대체
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
// 추가한 이유는 상기해뒀음
apply plugin: 'io.spring.dependency-management'
 */

// 일관성을 위해 plugins 블럭을 사용
plugins {
    id 'org.springframework.boot' version '1.5.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    // eclipse 로 import 를 편하게 만드는 plugin 이라는데?
    id 'eclipse'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// 하단은 같은 코드

group = 'com.koesob'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

// Spring Boot Overriding
ext ['hibernate.version'] = '5.2.11.Final'

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-actuator')
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation ('org.springframework.boot:spring-boot-starter-web')
    implementation ('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.2.15')
    compileOnly ('org.projectlombok:lombok')
    runtimeOnly ('com.h2database:h2')
    annotationProcessor ('org.projectlombok:lombok')
    testImplementation ('org.springframework.boot:spring-boot-starter-test')
}
/*
현재 사용 JUnit 4.12, 이걸 없애면 테스트 코드가 된다. 왜지
실제로 깃허브에는 하단 코드가 없다. JUnit5 버전 코드인듯?
→ JUnit5 에서 지원되는 내용이 맞다.
test {
    useJUnitPlatform()
}
 */
